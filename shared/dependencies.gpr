
with "aws";
with "aunit";
with "gnatcoll";
with "lib/AdaID/adaid.gpr";
with "lib/adabase/adabase.gpr";

project Dependencies is

   type Database_Option is ("mysql", "postgres", "sqlite");
   Database : Database_Option := External("DATABASE", "sqlite");

   -------------
   -- Sources --
   -------------
   for Source_Dirs use ();

   ------------
   -- Linker --
   ------------
   package Linker is
      Switch_Linker := ();

      case AdaBase.OS_VERSION is

         -------------
         -- Windows --
         -------------
         -- Download SQLite binaries and then download either the MySQL or PostgreSQL installer.
         -- after placing the SQLite binary where you like, and installing MySQL or PostgresSQL then
         -- modify these below paths to point to the folders containing the .dll files mentioned here
         -- Also add these folders to your %PATH% environment variable
         -- (required) sqlite   -> sqlite3.dll 
         --            mysql    -> libmysql.dll
         --            postgres -> libpq.dll
         when "windows" =>
            Switch_Linker := Switch_Linker & ("-Wl,--enable-stdcall-fixup", "C:\bin\sqlite3.dll");
            case Database is
               when "mysql"    => Switch_Linker := Switch_Linker & ("-LC:\mysql\lib", "-lmysql");
               when "postgres" => Switch_Linker := Switch_Linker & ("-LC:\Program Files\PostgreSQL\11\lib", "-lpq");
            end case;

         ----------
         -- Unix --
         ----------
         -- Use your package manager to install these packages
         -- (required) libsqlite3-dev     https://packages.ubuntu.com/disco/libsqlite3-dev
         --            libmysqlclient-dev https://packages.ubuntu.com/disco/libmysqlclient-dev
         --            libpq-dev          https://packages.ubuntu.com/disco/libpq-dev
         when "unix" =>
            Switch_Linker := Switch_Linker & ("-lsqlite");
            case Database is
               when "mysql"    => Switch_Linker := Switch_Linker & ("-lmysqlclient");
               when "postgres" => Switch_Linker := Switch_Linker & ("-lpq");
            end case;

      end case;

      for Default_Switches ("Ada") use Switch_Linker;
   end Linker;

end Dependencies;
