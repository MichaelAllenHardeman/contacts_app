
with "aws";
with "gnatcoll";
with "lib/adabase/adabase.gpr";
with "lib/AdaID/adaid.gpr";

project API_Shared is
    Source_Directories := ("src");

    case AdaBase.Driver_MySQL is
       when "no"  => null;
       when "yes" => Source_Directories := Source_Directories & "src/mysql";
    end case;

    case AdaBase.Driver_PgSQL is
       when "no"  => null;
       when "yes" => Source_Directories := Source_Directories & "src/postgres";
    end case;

    case AdaBase.Driver_SQLite is
       when "no"  => null;
       when "yes" => Source_Directories := Source_Directories & "src/sqlite";
    end case;
    
    case AdaBase.Driver_FBird is
       when "no"  => null;
       when "yes" => null;
    end case;

   for Source_Dirs use Source_Directories;
   for Object_Dir use "obj";

   package Linker is
      Switch_Linker := ();

      case AdaBase.Driver_MySQL is
         when "no"  => null;
         when "yes" => 
            case AdaBase.OS_VERSION is
               when "unix"    => Switch_Linker := Switch_Linker & ("-lmysqlclient");
               when "windows" => Switch_Linker := Switch_Linker & ("-Wl,-Bstatic,--enable-stdcall-fixup", "-llibmysql", "-lmysqlclient");
            end case;
      end case;

      case AdaBase.Driver_PgSQL is
         when "no"  => null;
         when "yes" => 
            case AdaBase.OS_VERSION is
               when "unix"    => Switch_Linker := Switch_Linker & ("-lpq");
               when "windows" => Switch_Linker := Switch_Linker & ("-Wl,--enable-stdcall-fixup", "libpq.dll");
            end case;
      end case;

      case AdaBase.Driver_SQLite is
         when "no"  => null;
         when "yes" =>
            case AdaBase.OS_VERSION is
               when "unix"    => Switch_Linker := Switch_Linker & ("-lsqlite");
               when "windows" => Switch_Linker := Switch_Linker & ("-Wl,--enable-stdcall-fixup", "libsqlite.dll");
            end case;
      end case;
      
      case AdaBase.Driver_FBird is
         when "no"  => null;
         when "yes" => null;
      end case;

    for Default_Switches ("Ada") use Switch_Linker;
  end Linker;
end API_Shared;
