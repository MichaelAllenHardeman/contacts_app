with "api_shared.gpr";
with "aunit";

project API_Shared.Tests is

   ---------------
   -- Variables --
   ---------------
   type Boolean_Option is ("yes", "no");
   Debug : Boolean_Option := external ("Debug", "no");

   -------------
   -- Sources --
   -------------
   Source_Directories := ("tests");

   case AdaBase.Driver_MySQL is
      when "no"  => null;
      when "yes" => Source_Directories := Source_Directories & "tests/mysql";
   end case;

   case AdaBase.Driver_PgSQL is
      when "no"  => null;
      when "yes" => Source_Directories := Source_Directories & "tests/postgres";
   end case;

   case AdaBase.Driver_SQLite is
      when "no"  => null;
      when "yes" => Source_Directories := Source_Directories & "tests/sqlite";
   end case;
    
   case AdaBase.Driver_FBird is
      when "no"  => null;
      when "yes" => null;
   end case;

   for Source_Dirs use Source_Directories;
   for Languages   use ("Ada");
   for Object_Dir  use API_Shared'Object_Dir;
   for Exec_Dir    use ".";
   for Main        use ("contacts_app-test_harness.adb");

   --------------
   -- Compiler --
   --------------
   package Compiler is
      Switch_Compiler := ("-gnatW8",    -- Wide character encoding method (?=h/u/s/e/8/b)
                          "-gnat2012"); -- Ada 2012 mode (default)
      case Debug is
         when "No"  => Switch_Compiler := Switch_Compiler & ("-O3",     -- Maximum Optimization
                                                             "-gnatp"); -- Surpress all checks
         when "Yes" => Switch_Compiler := Switch_Compiler & ("-O0",     -- Minimize Optimization
                                                             "-g",      -- Generate debugging information
                                                             "-gnata",  -- Assertions enabled. Pragma Assert/Debug to be activated
                                                             "-E",      -- Store traceback in exceptions
                                                             "-gnatf",  -- Full errors. Verbose details, all undefined references
                                                             "-gnato"); -- Enable overflow checking for numerics
      end case;
       
      for Default_Switches ("Ada") use Switch_Compiler;
   end Compiler;

   ------------
   -- Linker --
   ------------
   package Linker is
      Switch_Linker := API_Shared.Linker'Default_Switches ("Ada") & ("-lgcov", "-fprofile-arcs", "-ftest-coverage");
      for Default_Switches ("Ada") use Switch_Linker;
   end Linker;

end API_Shared.Tests;
 
